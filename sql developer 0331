select * from employees;
select count(*) from employees;
desc employees;
select EMPLOYEE_ID as 사원번호,first_name 이름 
from employees
where department_id=90;

select e1.email "email", '안녕하세요' 
from employees e2 ,employees e1;
from employees;

select email, salary, department_id
from employees;

select first_name||' '||last_name from employees;

select first_name, salary, salary+100, (salary+1000)/
from employees;

select first_name, salary+salary*commission_pct
from employees;

--where절 : 원하는 조건만 조회하기
select * from employees
where last_name = 'King' and salary<>15000;

select email, salary, department_id from employees
where salary>=10000 or salary<=7000
order by salary desc; --정렬은 항상 제일 마지막에... desc는 내림차순 asc는 오름차순

select email, salary from employees
where salary between 10000 and 17000
order by salary desc; -- <=, >=과 같은 의미의 between and

select email, department_id 
from employees
where department_id=10 or department_id=70; -- 좀 더 효율적으로 쓸 수 없을까?

select email, department_id 
from employees
where department_id in(10,70,90);

select employee_id,last_name from employees
where last_name = 'King';

select employee_id,last_name from employees
where last_name like 'K%'; --대문자 K로 시작하는 모든 글자


select email from employees
where department_id in (10,70);


select salary from employees
where department_id=10
union--합집합
select salary from employees
where department_id=70;

-- union = 합집합:중복 제거
-- union all = 합집합:중복까지 모두 
-- in
-- minus = 차집합:정렬됨
--commition_pct가 있는 email, department_id


select salary, department_id from employees
where salary <9000 and department_id=80;

select salary, department_id, email from employees
where department_id =80 and (salary<7000 or salary>=10000)
order by salary;

select email, department_id, commission_pct
from employees
minus
select email, department_id, commission_pct
from employees
where commission_pct is null


select salary, department_id from employees
